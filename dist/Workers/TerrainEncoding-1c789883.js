/*! For license information please see TerrainEncoding-1c789883.js.LICENSE.txt */
define(["exports","./Transforms-0c3fa360","./Matrix2-276d97d2","./defaultValue-a6eb9f34","./AttributeCompression-28a6d524","./ComponentDatatype-7f6d9570"],(function(t,e,i,o,a,n){"use strict";function r(t,e){this._ellipsoid=t,this._cameraPosition=new i.Cartesian3,this._cameraPositionInScaledSpace=new i.Cartesian3,this._distanceToLimbInScaledSpaceSquared=0,o.defined(e)&&(this.cameraPosition=e)}Object.defineProperties(r.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(t){const e=this._ellipsoid.transformPositionToScaledSpace(t,this._cameraPositionInScaledSpace),o=i.Cartesian3.magnitudeSquared(e)-1;i.Cartesian3.clone(t,this._cameraPosition),this._cameraPositionInScaledSpace=e,this._distanceToLimbInScaledSpaceSquared=o}}});const s=new i.Cartesian3;r.prototype.isPointVisible=function(t){return x(this._ellipsoid.transformPositionToScaledSpace(t,s),this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)},r.prototype.isScaledSpacePointVisible=function(t){return x(t,this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)};const c=new i.Cartesian3;r.prototype.isScaledSpacePointVisiblePossiblyUnderEllipsoid=function(t,e){const i=this._ellipsoid;let a,n;return o.defined(e)&&e<0&&i.minimumRadius>-e?(n=c,n.x=this._cameraPosition.x/(i.radii.x+e),n.y=this._cameraPosition.y/(i.radii.y+e),n.z=this._cameraPosition.z/(i.radii.z+e),a=n.x*n.x+n.y*n.y+n.z*n.z-1):(n=this._cameraPositionInScaledSpace,a=this._distanceToLimbInScaledSpaceSquared),x(t,n,a)},r.prototype.computeHorizonCullingPoint=function(t,e,i){return h(this._ellipsoid,t,e,i)};const d=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE);r.prototype.computeHorizonCullingPointPossiblyUnderEllipsoid=function(t,e,i,o){return h(m(this._ellipsoid,i,d),t,e,o)},r.prototype.computeHorizonCullingPointFromVertices=function(t,e,i,o,a){return p(this._ellipsoid,t,e,i,o,a)},r.prototype.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid=function(t,e,i,o,a,n){return p(m(this._ellipsoid,a,d),t,e,i,o,n)};const u=[];r.prototype.computeHorizonCullingPointFromRectangle=function(t,o,a){const n=i.Rectangle.subsample(t,o,0,u),r=e.BoundingSphere.fromPoints(n);if(!(i.Cartesian3.magnitude(r.center)<.1*o.minimumRadius))return this.computeHorizonCullingPoint(r.center,n,a)};const l=new i.Cartesian3;function m(t,e,a){if(o.defined(e)&&e<0&&t.minimumRadius>-e){const o=i.Cartesian3.fromElements(t.radii.x+e,t.radii.y+e,t.radii.z+e,l);t=i.Ellipsoid.fromCartesian3(o,a)}return t}function h(t,e,a,n){o.defined(n)||(n=new i.Cartesian3);const r=M(t,e);let s=0;for(let e=0,i=a.length;e<i;++e){const i=g(t,a[e],r);if(i<0)return;s=Math.max(s,i)}return y(r,s,n)}const f=new i.Cartesian3;function p(t,e,a,n,r,s){o.defined(s)||(s=new i.Cartesian3),n=o.defaultValue(n,3),r=o.defaultValue(r,i.Cartesian3.ZERO);const c=M(t,e);let d=0;for(let e=0,i=a.length;e<i;e+=n){f.x=a[e]+r.x,f.y=a[e+1]+r.y,f.z=a[e+2]+r.z;const i=g(t,f,c);if(i<0)return;d=Math.max(d,i)}return y(c,d,s)}function x(t,e,o){const a=e,n=o,r=i.Cartesian3.subtract(t,a,s),c=-i.Cartesian3.dot(r,a);return!(n<0?c>0:c>n&&c*c/i.Cartesian3.magnitudeSquared(r)>n)}const S=new i.Cartesian3,C=new i.Cartesian3;function g(t,e,o){const a=t.transformPositionToScaledSpace(e,S);let n=i.Cartesian3.magnitudeSquared(a),r=Math.sqrt(n);const s=i.Cartesian3.divideByScalar(a,r,C);n=Math.max(1,n),r=Math.max(1,r);const c=1/r;return 1/(i.Cartesian3.dot(s,o)*c-i.Cartesian3.magnitude(i.Cartesian3.cross(s,o,s))*(Math.sqrt(n-1)*c))}function y(t,e,o){if(!(e<=0||e===1/0||e!=e))return i.Cartesian3.multiplyByScalar(t,e,o)}const N=new i.Cartesian3;function M(t,e){return i.Cartesian3.equals(e,i.Cartesian3.ZERO)?e:(t.transformPositionToScaledSpace(e,N),i.Cartesian3.normalize(N,N))}const T={getHeight:function(t,e,i){return(t-i)*e+i}},b=new i.Cartesian3;T.getPosition=function(t,e,o,a,n){const r=e.cartesianToCartographic(t,b),s=T.getHeight(r.height,o,a);return i.Cartesian3.fromRadians(r.longitude,r.latitude,s,e,n)};var P=T,z=Object.freeze({NONE:0,BITS12:1});const _=new i.Cartesian3,E=new i.Cartesian3,H=new i.Cartesian2,w=new i.Matrix4,A=new i.Matrix4,I=Math.pow(2,12);function V(t,e,a,n,r,s,c,d,u,l){let m,h,f=z.NONE;if(o.defined(e)&&o.defined(a)&&o.defined(n)&&o.defined(r)){const t=e.minimum,o=e.maximum,s=i.Cartesian3.subtract(o,t,E),c=n-a;f=Math.max(i.Cartesian3.maximumComponent(s),c)<I-1?z.BITS12:z.NONE,m=i.Matrix4.inverseTransformation(r,new i.Matrix4);const d=i.Cartesian3.negate(t,_);i.Matrix4.multiply(i.Matrix4.fromTranslation(d,w),m,m);const u=_;u.x=1/s.x,u.y=1/s.y,u.z=1/s.z,i.Matrix4.multiply(i.Matrix4.fromScale(u,w),m,m),h=i.Matrix4.clone(r),i.Matrix4.setTranslation(h,i.Cartesian3.ZERO,h),r=i.Matrix4.clone(r,new i.Matrix4);const l=i.Matrix4.fromTranslation(t,w),p=i.Matrix4.fromScale(s,A),x=i.Matrix4.multiply(l,p,w);i.Matrix4.multiply(r,x,r),i.Matrix4.multiply(h,x,h)}this.quantization=f,this.minimumHeight=a,this.maximumHeight=n,this.center=i.Cartesian3.clone(t),this.toScaledENU=m,this.fromScaledENU=r,this.matrix=h,this.hasVertexNormals=s,this.hasWebMercatorT=o.defaultValue(c,!1),this.hasGeodeticSurfaceNormals=o.defaultValue(d,!1),this.exaggeration=o.defaultValue(u,1),this.exaggerationRelativeHeight=o.defaultValue(l,0),this.stride=0,this._offsetGeodeticSurfaceNormal=0,this._offsetVertexNormal=0,this._calculateStrideAndOffsets()}V.prototype.encode=function(t,e,o,r,s,c,d,u){const l=r.x,m=r.y;if(this.quantization===z.BITS12){(o=i.Matrix4.multiplyByPoint(this.toScaledENU,o,_)).x=n.CesiumMath.clamp(o.x,0,1),o.y=n.CesiumMath.clamp(o.y,0,1),o.z=n.CesiumMath.clamp(o.z,0,1);const r=this.maximumHeight-this.minimumHeight,c=n.CesiumMath.clamp((s-this.minimumHeight)/r,0,1);i.Cartesian2.fromElements(o.x,o.y,H);const u=a.AttributeCompression.compressTextureCoordinates(H);i.Cartesian2.fromElements(o.z,c,H);const h=a.AttributeCompression.compressTextureCoordinates(H);i.Cartesian2.fromElements(l,m,H);const f=a.AttributeCompression.compressTextureCoordinates(H);if(t[e++]=u,t[e++]=h,t[e++]=f,this.hasWebMercatorT){i.Cartesian2.fromElements(d,0,H);const o=a.AttributeCompression.compressTextureCoordinates(H);t[e++]=o}}else i.Cartesian3.subtract(o,this.center,_),t[e++]=_.x,t[e++]=_.y,t[e++]=_.z,t[e++]=s,t[e++]=l,t[e++]=m,this.hasWebMercatorT&&(t[e++]=d);return this.hasVertexNormals&&(t[e++]=a.AttributeCompression.octPackFloat(c)),this.hasGeodeticSurfaceNormals&&(t[e++]=u.x,t[e++]=u.y,t[e++]=u.z),e};const q=new i.Cartesian3,G=new i.Cartesian3;V.prototype.addGeodeticSurfaceNormals=function(t,e,i){if(this.hasGeodeticSurfaceNormals)return;const o=this.stride,a=t.length/o;this.hasGeodeticSurfaceNormals=!0,this._calculateStrideAndOffsets();const n=this.stride;for(let r=0;r<a;r++){for(let i=0;i<o;i++){const a=r*o+i;e[r*n+i]=t[a]}const a=this.decodePosition(e,r,q),s=i.geodeticSurfaceNormal(a,G),c=r*n+this._offsetGeodeticSurfaceNormal;e[c]=s.x,e[c+1]=s.y,e[c+2]=s.z}},V.prototype.removeGeodeticSurfaceNormals=function(t,e){if(!this.hasGeodeticSurfaceNormals)return;const i=this.stride,o=t.length/i;this.hasGeodeticSurfaceNormals=!1,this._calculateStrideAndOffsets();const a=this.stride;for(let n=0;n<o;n++)for(let o=0;o<a;o++){const r=n*i+o;e[n*a+o]=t[r]}},V.prototype.decodePosition=function(t,e,n){if(o.defined(n)||(n=new i.Cartesian3),e*=this.stride,this.quantization===z.BITS12){const o=a.AttributeCompression.decompressTextureCoordinates(t[e],H);n.x=o.x,n.y=o.y;const r=a.AttributeCompression.decompressTextureCoordinates(t[e+1],H);return n.z=r.x,i.Matrix4.multiplyByPoint(this.fromScaledENU,n,n)}return n.x=t[e],n.y=t[e+1],n.z=t[e+2],i.Cartesian3.add(n,this.center,n)},V.prototype.getExaggeratedPosition=function(t,e,i){i=this.decodePosition(t,e,i);const o=this.exaggeration,a=this.exaggerationRelativeHeight;if(1!==o&&this.hasGeodeticSurfaceNormals){const n=this.decodeGeodeticSurfaceNormal(t,e,G),r=this.decodeHeight(t,e),s=P.getHeight(r,o,a)-r;i.x+=n.x*s,i.y+=n.y*s,i.z+=n.z*s}return i},V.prototype.decodeTextureCoordinates=function(t,e,n){return o.defined(n)||(n=new i.Cartesian2),e*=this.stride,this.quantization===z.BITS12?a.AttributeCompression.decompressTextureCoordinates(t[e+2],n):i.Cartesian2.fromElements(t[e+4],t[e+5],n)},V.prototype.decodeHeight=function(t,e){return e*=this.stride,this.quantization===z.BITS12?a.AttributeCompression.decompressTextureCoordinates(t[e+1],H).y*(this.maximumHeight-this.minimumHeight)+this.minimumHeight:t[e+3]},V.prototype.decodeWebMercatorT=function(t,e){return e*=this.stride,this.quantization===z.BITS12?a.AttributeCompression.decompressTextureCoordinates(t[e+3],H).x:t[e+6]},V.prototype.getOctEncodedNormal=function(t,e,o){const a=t[e=e*this.stride+this._offsetVertexNormal]/256,n=Math.floor(a),r=256*(a-n);return i.Cartesian2.fromElements(n,r,o)},V.prototype.decodeGeodeticSurfaceNormal=function(t,e,i){return e=e*this.stride+this._offsetGeodeticSurfaceNormal,i.x=t[e],i.y=t[e+1],i.z=t[e+2],i},V.prototype._calculateStrideAndOffsets=function(){let t=0;this.quantization===z.BITS12?t+=3:t+=6,this.hasWebMercatorT&&(t+=1),this.hasVertexNormals&&(this._offsetVertexNormal=t,t+=1),this.hasGeodeticSurfaceNormals&&(this._offsetGeodeticSurfaceNormal=t,t+=3),this.stride=t};const O={position3DAndHeight:0,textureCoordAndEncodedNormals:1,geodeticSurfaceNormal:2},B={compressed0:0,compressed1:1,geodeticSurfaceNormal:2};V.prototype.getAttributes=function(t){const e=n.ComponentDatatype.FLOAT,i=n.ComponentDatatype.getSizeInBytes(e),o=this.stride*i;let a=0;const r=[];function s(n,s){r.push({index:n,vertexBuffer:t,componentDatatype:e,componentsPerAttribute:s,offsetInBytes:a,strideInBytes:o}),a+=s*i}if(this.quantization===z.NONE){s(O.position3DAndHeight,4);let t=2;t+=this.hasWebMercatorT?1:0,t+=this.hasVertexNormals?1:0,s(O.textureCoordAndEncodedNormals,t),this.hasGeodeticSurfaceNormals&&s(O.geodeticSurfaceNormal,3)}else{const t=this.hasWebMercatorT||this.hasVertexNormals,e=this.hasWebMercatorT&&this.hasVertexNormals;s(B.compressed0,t?4:3),e&&s(B.compressed1,1),this.hasGeodeticSurfaceNormals&&s(B.geodeticSurfaceNormal,3)}return r},V.prototype.getAttributeLocations=function(){return this.quantization===z.NONE?O:B},V.clone=function(t,e){if(o.defined(t))return o.defined(e)||(e=new V),e.quantization=t.quantization,e.minimumHeight=t.minimumHeight,e.maximumHeight=t.maximumHeight,e.center=i.Cartesian3.clone(t.center),e.toScaledENU=i.Matrix4.clone(t.toScaledENU),e.fromScaledENU=i.Matrix4.clone(t.fromScaledENU),e.matrix=i.Matrix4.clone(t.matrix),e.hasVertexNormals=t.hasVertexNormals,e.hasWebMercatorT=t.hasWebMercatorT,e.hasGeodeticSurfaceNormals=t.hasGeodeticSurfaceNormals,e.exaggeration=t.exaggeration,e.exaggerationRelativeHeight=t.exaggerationRelativeHeight,e._calculateStrideAndOffsets(),e},t.EllipsoidalOccluder=r,t.TerrainEncoding=V}));